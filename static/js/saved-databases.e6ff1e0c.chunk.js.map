{"version":3,"sources":["components/SavedDatabase/API.js","../../node_modules/@material-ui/icons/Delete.js","components/SavedDatabase/DatabaseItem.js","components/SavedDatabase/DatabaseList.js","components/SavedDatabase/SaveDatabase.js","components/SavedDatabase/DatabaseManager.js"],"names":["saveDatabase","title","database","blob","Blob","type","data","FormData","set","fetch","method","body","credentials","then","handleError","res","json","loadDatabase","id","arrayBuffer","deleteDatabase","listDatabases","headers","Headers","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","Fragment","d","fill","DatabaseItem","handleClick","props","clickHandler","_id","handleDelete","deleteHandler","this","createdAt","date","Date","toDateString","ListItem","onClick","button","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","aria-label","React","Component","flexSpaceBetween","display","justifyContent","DatabaseList","state","error","handleLoadDatabase","a","loadDatabaseHandler","closeHandler","fileBuffer","Uint8Array","text","setState","handleDeleteDatabase","refreshSavedDatabaseList","handleClose","list","DialogTitle","style","Button","component","Link","to","color","variant","size","DialogContent","DialogContentText","align","List","length","map","key","disabled","DialogActions","SaveDatabase","handleSaveDatabase","currentDatabase","export","history","push","handleChange","e","target","currentSavedDatabaseCount","disableTypography","Typography","FormControl","Boolean","aria-describedby","fullWidth","Input","placeholder","onChange","margin","autoFocus","required","inputProps","maxLength","FormHelperText","DatabaseManager","componentDidMount","Dialog","open","onClose","path"],"mappings":"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","file":"static/js/saved-databases.e6ff1e0c.chunk.js","sourcesContent":["import handleError from \"../../utils/handleError\";\r\n\r\nexport const saveDatabase = (title, database) => {\r\n  const blob = new Blob([database], {\r\n    type: `application/x-sqlite-3`\r\n  });\r\n\r\n  const data = new FormData();\r\n\r\n  data.set(\"database\", blob);\r\n\r\n  return fetch(`/api/database/save/${title}`, {\r\n    method: \"POST\",\r\n    body: data,\r\n    credentials: \"same-origin\"\r\n  })\r\n    .then(handleError)\r\n    .then(res => res.json());\r\n};\r\n\r\nexport const loadDatabase = id => {\r\n  return fetch(`/api/database/load/${id}`, {\r\n    method: \"GET\",\r\n    credentials: \"same-origin\"\r\n  })\r\n    .then(handleError)\r\n    .then(res => res.arrayBuffer());\r\n};\r\n\r\nexport const deleteDatabase = id => {\r\n  return fetch(`/api/database/delete/${id}`, {\r\n    method: \"GET\",\r\n    credentials: \"same-origin\"\r\n  }).then(handleError);\r\n};\r\n\r\nexport const listDatabases = () => {\r\n  return fetch(\"/api/database/list\", {\r\n    method: \"GET\",\r\n    credentials: \"same-origin\",\r\n    headers: new Headers({\r\n      \"Content-Type\": \"application/json\"\r\n    })\r\n  })\r\n    .then(handleError)\r\n    .then(res => res.json());\r\n};\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Delete');\n\nexports.default = _default;","import React from \"react\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nexport default class DatabaseItem extends React.Component {\r\n  handleClick = () => this.props.clickHandler(this.props.database._id);\r\n\r\n  handleDelete = () => this.props.deleteHandler(this.props.database._id);\r\n\r\n  render() {\r\n    const { title, createdAt } = this.props.database;\r\n\r\n    const date = new Date(createdAt).toDateString();\r\n\r\n    return (\r\n      <ListItem onClick={this.handleClick} button>\r\n        <ListItemText primary={title} secondary={date} />\r\n        {this.props.deleteHandler && (\r\n          <ListItemSecondaryAction onClick={this.handleDelete}>\r\n            <IconButton aria-label=\"Delete\">\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        )}\r\n      </ListItem>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { loadDatabase, deleteDatabase } from \"./API\";\r\n\r\nimport DatabaseItem from \"./DatabaseItem\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nconst flexSpaceBetween = { display: \"flex\", justifyContent: \"space-between\" };\r\n\r\nexport default class DatabaseList extends React.Component {\r\n  state = {\r\n    error: null\r\n  };\r\n\r\n  handleLoadDatabase = async id => {\r\n    const { loadDatabaseHandler, closeHandler } = this.props;\r\n\r\n    let fileBuffer;\r\n\r\n    // Try to fetch the database from the server.\r\n    try {\r\n      fileBuffer = await loadDatabase(id);\r\n\r\n      // Load the database into the client.\r\n      loadDatabaseHandler(new Uint8Array(fileBuffer));\r\n\r\n      return closeHandler();\r\n    } catch (response) {\r\n      const error = await response.text();\r\n\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  handleDeleteDatabase = async id => {\r\n    // Try to delete the database from the server.\r\n    try {\r\n      await deleteDatabase(id);\r\n\r\n      // Refresh the database list so the newly deleted databases goes.\r\n      // This could be replaced with a client-side removal of the node, if you're a stickler for optimization.\r\n      return this.props.refreshSavedDatabaseList();\r\n    } catch (response) {\r\n      const error = await response.text();\r\n\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  handleClose = () => this.props.closeHandler();\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n\r\n    const { list } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <DialogTitle id=\"dialog-title\">\r\n          <div style={flexSpaceBetween}>\r\n            Saved Databases\r\n            <Button\r\n              component={Link}\r\n              to=\"/database/save\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n            >\r\n              Save &raquo;\r\n            </Button>\r\n          </div>\r\n        </DialogTitle>\r\n        {error && (\r\n          <DialogContent>\r\n            <DialogContentText color=\"error\" align=\"center\">\r\n              {error}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n        )}\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Allows you to save your current database in a more{\" \"}\r\n            <em>permanent</em> location, on the server.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n\r\n        <List>\r\n          {list && list.length ? (\r\n            list.map(database => (\r\n              <DatabaseItem\r\n                key={database._id}\r\n                database={database}\r\n                clickHandler={this.handleLoadDatabase}\r\n                deleteHandler={this.handleDeleteDatabase}\r\n              />\r\n            ))\r\n          ) : (\r\n            <ListItem disabled>\r\n              <ListItemText>No saved databases yet!</ListItemText>\r\n            </ListItem>\r\n          )}\r\n        </List>\r\n        <DialogActions>\r\n          <Button onClick={this.handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n//import PropTypes from 'prop-types';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { saveDatabase } from \"./API\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst flexSpaceBetween = { display: \"flex\", justifyContent: \"space-between\" };\r\n\r\nexport default class SaveDatabase extends React.Component {\r\n  state = {\r\n    title: \"\",\r\n    error: null\r\n  };\r\n\r\n  handleSaveDatabase = async () => {\r\n    const { title } = this.state;\r\n\r\n    const { refreshSavedDatabaseList, currentDatabase } = this.props;\r\n\r\n    // Export the current database into a array buffer.\r\n    const database = currentDatabase.export();\r\n\r\n    // Try to save the database on the server.\r\n    try {\r\n      await saveDatabase(title, database);\r\n\r\n      // Refresh the database list so the newly deleted databases goes.\r\n      // This could be replaced with a client-side removal of the node, if you're a stickler for optimization.\r\n      refreshSavedDatabaseList();\r\n\r\n      // Redirect back to the database list.\r\n      return this.props.history.push(\"/\");\r\n    } catch (response) {\r\n      const error = await response.text();\r\n\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  handleChange = e => this.setState({ title: e.target.value });\r\n\r\n  handleClose = () => this.props.closeHandler();\r\n\r\n  render() {\r\n    const { title, error } = this.state;\r\n\r\n    const { currentSavedDatabaseCount } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <DialogTitle\r\n          id=\"dialog-title\"\r\n          style={flexSpaceBetween}\r\n          disableTypography\r\n        >\r\n          <Typography variant=\"h6\">Save your current database</Typography>\r\n          <Button\r\n            component={Link}\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            to=\"/\"\r\n          >\r\n            &laquo; Back\r\n          </Button>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <FormControl\r\n            error={Boolean(error)}\r\n            aria-describedby=\"name-error-text\"\r\n            fullWidth\r\n          >\r\n            <Input\r\n              id=\"name\"\r\n              placeholder=\"Please choose an identifiable title\"\r\n              value={title}\r\n              onChange={this.handleChange}\r\n              margin=\"dense\"\r\n              autoFocus\r\n              fullWidth\r\n              required\r\n              inputProps={{ maxLength: 32 }}\r\n            />\r\n            {error && (\r\n              <FormHelperText id=\"name-error-text\">{error}</FormHelperText>\r\n            )}\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={this.handleSaveDatabase}\r\n            disabled={Boolean(\r\n              currentSavedDatabaseCount && currentSavedDatabaseCount > 4\r\n            )}\r\n          >\r\n            Save ({currentSavedDatabaseCount}\r\n            /5)\r\n          </Button>\r\n          <Button onClick={this.handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { listDatabases } from \"./API\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nimport DatabaseList from \"./DatabaseList\";\r\nimport SaveDatabase from \"./SaveDatabase\";\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nexport default class DatabaseManager extends React.Component {\r\n  state = {\r\n    list: null\r\n  };\r\n\r\n  componentDidMount = () => this.refreshSavedDatabaseList();\r\n\r\n  refreshSavedDatabaseList = () =>\r\n    listDatabases().then(list => this.setState({ list }));\r\n\r\n  handleClose = () => this.props.closeHandler();\r\n\r\n  render() {\r\n    const { list } = this.state;\r\n\r\n    if (list === null) {\r\n      return null;\r\n    }\r\n\r\n    const { currentDatabase, loadDatabaseHandler } = this.props;\r\n\r\n    const SaveDatabaseComponent = ({ history }) => (\r\n      <SaveDatabase\r\n        history={history}\r\n        currentDatabase={currentDatabase}\r\n        currentSavedDatabaseCount={list.length}\r\n        refreshSavedDatabaseList={this.refreshSavedDatabaseList}\r\n        closeHandler={this.handleClose}\r\n      />\r\n    );\r\n\r\n    const DatabaseListComponent = () => (\r\n      <DatabaseList\r\n        list={list}\r\n        loadDatabaseHandler={loadDatabaseHandler}\r\n        refreshSavedDatabaseList={this.refreshSavedDatabaseList}\r\n        closeHandler={this.handleClose}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Dialog open onClose={this.handleClose} fullWidth>\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/database/save\" component={SaveDatabaseComponent} />\r\n            <Route component={DatabaseListComponent} />\r\n          </Switch>\r\n        </Router>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}